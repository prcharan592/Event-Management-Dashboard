{"ast":null,"code":"var _jsxFileName = \"/Users/charanpr/Downloads/EventManagementDashboard-main/frontend/src/Pages/Event.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/Event.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Event() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [tasks, setTasks] = useState({});\n  const [editingEventName, setEditingEventName] = useState(null);\n  const [editField, setEditField] = useState('');\n  const [editValue, setEditValue] = useState('');\n  const [newEvent, setNewEvent] = useState({\n    name: '',\n    date: '',\n    location: '',\n    description: ''\n  });\n  const [showEvents, setShowEvents] = useState(false); // New state for toggling event list visibility\n\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/getEvents');\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n  const fetchTasksForEvent = async eventName => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/getEventTasks', {\n        params: {\n          name: eventName\n        }\n      });\n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [eventName]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching tasks for event:', error);\n    }\n  };\n  const toggleTasks = eventName => {\n    if (tasks[eventName]) {\n      setTasks(prevTasks => {\n        const updatedTasks = {\n          ...prevTasks\n        };\n        delete updatedTasks[eventName];\n        return updatedTasks;\n      });\n    } else {\n      fetchTasksForEvent(eventName);\n    }\n  };\n  const deleteTask = async eventName => {\n    try {\n      await axios.delete('http://localhost:5001/api/deleteTask', {\n        data: {\n          name: eventName\n        }\n      });\n      fetchTasksForEvent(eventName);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const deleteEvent = async eventName => {\n    try {\n      await axios.delete('http://localhost:5001/api/deleteEvent', {\n        data: {\n          name: eventName\n        }\n      });\n      fetchEvents();\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n  const updateEvent = async () => {\n    let endpoint = '';\n    switch (editField) {\n      case 'date':\n        endpoint = 'http://localhost:5001/api/updateEventDate';\n        break;\n      case 'description':\n        endpoint = 'http://localhost:5001/api/updateEventDescription';\n        break;\n      case 'location':\n        endpoint = 'http://localhost:5001/api/updateEventLocation';\n        break;\n      default:\n        console.error('Invalid edit field');\n        return;\n    }\n    try {\n      await axios.put(endpoint, {\n        name: editingEventName,\n        [editField]: editValue\n      });\n      fetchEvents();\n      cancelEditing();\n    } catch (error) {\n      console.error(`Error updating event ${editField}:`, error);\n    }\n  };\n  const addEvent = async () => {\n    try {\n      if (!newEvent.name || !newEvent.date || !newEvent.location || !newEvent.description) {\n        alert('All fields are required!');\n        return;\n      }\n      await axios.post('http://localhost:5001/api/postEvent', newEvent);\n      fetchEvents();\n      setNewEvent({\n        name: '',\n        date: '',\n        location: '',\n        description: ''\n      });\n    } catch (error) {\n      console.error('Error adding event:', error);\n    }\n  };\n  const startEditing = (eventName, field, currentValue) => {\n    setEditingEventName(eventName);\n    setEditField(field);\n    setEditValue(currentValue);\n  };\n  const cancelEditing = () => {\n    setEditingEventName(null);\n    setEditField('');\n    setEditValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Event Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-event-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Event Name\",\n        value: newEvent.name,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newEvent.date,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Location\",\n        value: newEvent.location,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          location: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: newEvent.description,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addEvent,\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-events-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (!showEvents) fetchEvents();\n          setShowEvents(!showEvents);\n        },\n        children: showEvents ? 'Hide Event List' : 'View Event List'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), showEvents && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: events.map(event => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: event.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingEventName === event.name && editField === 'date' ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: editValue,\n                  onChange: e => setEditValue(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [new Date(event.date).toLocaleDateString(), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => startEditing(event.name, 'date', event.date),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingEventName === event.name && editField === 'location' ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editValue,\n                  onChange: e => setEditValue(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [event.location, /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => startEditing(event.name, 'location', event.location),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingEventName === event.name && editField === 'description' ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: editValue,\n                  onChange: e => setEditValue(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [event.description, /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => startEditing(event.name, 'description', event.description),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingEventName === event.name ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: updateEvent,\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: cancelEditing,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => toggleTasks(event.name),\n                    children: tasks[event.name] ? 'Hide Tasks' : 'Show Tasks'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteEvent(event.name),\n                    children: \"Delete Event\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), tasks[event.name] && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"5\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"task-table\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Task Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Deadline\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Actions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: tasks[event.name].map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: task.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: new Date(task.deadline).toLocaleDateString()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 269,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: task.status ? 'Completed' : 'Pending'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 270,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => deleteTask(task.name),\n                          children: \"Delete Task\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 272,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 271,\n                        columnNumber: 33\n                      }, this)]\n                    }, task._id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this)]\n          }, event._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(Event, \"jCmiBrP6u/KtBd3BFtnjkacOkZE=\");\n_c = Event;\nvar _c;\n$RefreshReg$(_c, \"Event\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Event","_s","events","setEvents","tasks","setTasks","editingEventName","setEditingEventName","editField","setEditField","editValue","setEditValue","newEvent","setNewEvent","name","date","location","description","showEvents","setShowEvents","fetchEvents","response","get","data","error","console","fetchTasksForEvent","eventName","params","prevTasks","toggleTasks","updatedTasks","deleteTask","delete","deleteEvent","updateEvent","endpoint","put","cancelEditing","addEvent","alert","post","startEditing","field","currentValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","event","Date","toLocaleDateString","colSpan","task","deadline","status","_id","_c","$RefreshReg$"],"sources":["/Users/charanpr/Downloads/EventManagementDashboard-main/frontend/src/Pages/Event.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/Event.css';\n\nexport default function Event() {\n  const [events, setEvents] = useState([]);\n  const [tasks, setTasks] = useState({});\n  const [editingEventName, setEditingEventName] = useState(null);\n  const [editField, setEditField] = useState('');\n  const [editValue, setEditValue] = useState('');\n  const [newEvent, setNewEvent] = useState({\n    name: '',\n    date: '',\n    location: '',\n    description: '',\n  });\n  const [showEvents, setShowEvents] = useState(false); // New state for toggling event list visibility\n\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/getEvents');\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n\n  const fetchTasksForEvent = async (eventName) => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/getEventTasks', {\n        params: { name: eventName },\n      });\n      setTasks((prevTasks) => ({\n        ...prevTasks,\n        [eventName]: response.data,\n      }));\n    } catch (error) {\n      console.error('Error fetching tasks for event:', error);\n    }\n  };\n\n  const toggleTasks = (eventName) => {\n    if (tasks[eventName]) {\n      setTasks((prevTasks) => {\n        const updatedTasks = { ...prevTasks };\n        delete updatedTasks[eventName];\n        return updatedTasks;\n      });\n    } else {\n      fetchTasksForEvent(eventName);\n    }\n  };\n\n  const deleteTask = async (eventName) => {\n    try {\n      await axios.delete('http://localhost:5001/api/deleteTask', {\n        data: { name: eventName },\n      });\n      fetchTasksForEvent(eventName);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const deleteEvent = async (eventName) => {\n    try {\n      await axios.delete('http://localhost:5001/api/deleteEvent', {\n        data: { name: eventName },\n      });\n      fetchEvents();\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n\n  const updateEvent = async () => {\n    let endpoint = '';\n    switch (editField) {\n      case 'date':\n        endpoint = 'http://localhost:5001/api/updateEventDate';\n        break;\n      case 'description':\n        endpoint = 'http://localhost:5001/api/updateEventDescription';\n        break;\n      case 'location':\n        endpoint = 'http://localhost:5001/api/updateEventLocation';\n        break;\n      default:\n        console.error('Invalid edit field');\n        return;\n    }\n    try {\n      await axios.put(endpoint, { name: editingEventName, [editField]: editValue });\n      fetchEvents();\n      cancelEditing();\n    } catch (error) {\n      console.error(`Error updating event ${editField}:`, error);\n    }\n  };\n\n  const addEvent = async () => {\n    try {\n      if (!newEvent.name || !newEvent.date || !newEvent.location || !newEvent.description) {\n        alert('All fields are required!');\n        return;\n      }\n      await axios.post('http://localhost:5001/api/postEvent', newEvent);\n      fetchEvents();\n      setNewEvent({ name: '', date: '', location: '', description: '' });\n    } catch (error) {\n      console.error('Error adding event:', error);\n    }\n  };\n\n  const startEditing = (eventName, field, currentValue) => {\n    setEditingEventName(eventName);\n    setEditField(field);\n    setEditValue(currentValue);\n  };\n\n  const cancelEditing = () => {\n    setEditingEventName(null);\n    setEditField('');\n    setEditValue('');\n  };\n\n  return (\n    <div className=\"event-page\">\n      <h1>Event Management</h1>\n\n      <div className=\"add-event-form\">\n        <h2>Add New Event</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Event Name\"\n          value={newEvent.name}\n          onChange={(e) => setNewEvent({ ...newEvent, name: e.target.value })}\n        />\n        <input\n          type=\"date\"\n          value={newEvent.date}\n          onChange={(e) => setNewEvent({ ...newEvent, date: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Location\"\n          value={newEvent.location}\n          onChange={(e) => setNewEvent({ ...newEvent, location: e.target.value })}\n        />\n        <textarea\n          placeholder=\"Description\"\n          value={newEvent.description}\n          onChange={(e) => setNewEvent({ ...newEvent, description: e.target.value })}\n        ></textarea>\n        <button onClick={addEvent}>Add Event</button>\n      </div>\n\n      <div className=\"view-events-button\">\n        <button\n          onClick={() => {\n            if (!showEvents) fetchEvents();\n            setShowEvents(!showEvents);\n          }}\n        >\n          {showEvents ? 'Hide Event List' : 'View Event List'}\n        </button>\n      </div>\n\n      {showEvents && (\n        <div className=\"event-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Date</th>\n                <th>Location</th>\n                <th>Description</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {events.map((event) => (\n                <React.Fragment key={event._id}>\n                  <tr>\n                    <td>{event.name}</td>\n                    <td>\n                      {editingEventName === event.name && editField === 'date' ? (\n                        <input\n                          type=\"date\"\n                          value={editValue}\n                          onChange={(e) => setEditValue(e.target.value)}\n                        />\n                      ) : (\n                        <>\n                          {new Date(event.date).toLocaleDateString()}\n                          <button onClick={() => startEditing(event.name, 'date', event.date)}>\n                            Edit\n                          </button>\n                        </>\n                      )}\n                    </td>\n                    <td>\n                      {editingEventName === event.name && editField === 'location' ? (\n                        <input\n                          type=\"text\"\n                          value={editValue}\n                          onChange={(e) => setEditValue(e.target.value)}\n                        />\n                      ) : (\n                        <>\n                          {event.location}\n                          <button onClick={() => startEditing(event.name, 'location', event.location)}>\n                            Edit\n                          </button>\n                        </>\n                      )}\n                    </td>\n                    <td>\n                      {editingEventName === event.name && editField === 'description' ? (\n                        <textarea\n                          value={editValue}\n                          onChange={(e) => setEditValue(e.target.value)}\n                        />\n                      ) : (\n                        <>\n                          {event.description}\n                          <button\n                            onClick={() =>\n                              startEditing(event.name, 'description', event.description)\n                            }\n                          >\n                            Edit\n                          </button>\n                        </>\n                      )}\n                    </td>\n                    <td>\n                      {editingEventName === event.name ? (\n                        <>\n                          <button onClick={updateEvent}>Save</button>\n                          <button onClick={cancelEditing}>Cancel</button>\n                        </>\n                      ) : (\n                        <>\n                          <button onClick={() => toggleTasks(event.name)}>\n                            {tasks[event.name] ? 'Hide Tasks' : 'Show Tasks'}\n                          </button>\n                          <button onClick={() => deleteEvent(event.name)}>Delete Event</button>\n                        </>\n                      )}\n                    </td>\n                  </tr>\n                  {tasks[event.name] && (\n                    <tr>\n                      <td colSpan=\"5\">\n                        <table className=\"task-table\">\n                          <thead>\n                            <tr>\n                              <th>Task Name</th>\n                              <th>Deadline</th>\n                              <th>Status</th>\n                              <th>Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {tasks[event.name].map((task) => (\n                              <tr key={task._id}>\n                                <td>{task.name}</td>\n                                <td>{new Date(task.deadline).toLocaleDateString()}</td>\n                                <td>{task.status ? 'Completed' : 'Pending'}</td>\n                                <td>\n                                  <button onClick={() => deleteTask(task.name)}>Delete Task</button>\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </td>\n                    </tr>\n                  )}\n                </React.Fragment>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}