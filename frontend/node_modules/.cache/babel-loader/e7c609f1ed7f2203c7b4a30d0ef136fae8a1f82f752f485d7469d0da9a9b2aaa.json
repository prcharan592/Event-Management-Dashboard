{"ast":null,"code":"var _jsxFileName = \"/Users/charanpr/Downloads/EventManagementDashboard-main/frontend/src/Pages/Sidebar.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom'; // Removed useNavigate as it is unused\n// import '../styles/sidebar.css';\n\n// const Sidebar = () => {\n//   const [isOpen, setIsOpen] = useState(false);\n\n//   const toggleSidebar = () => {\n//     setIsOpen((prev) => !prev);\n//   };\n\n//   const handleLogout = () => {\n//     // Clear all auth-related data\n//     localStorage.clear(); // This will remove both token and user\n\n//     // Force a page reload and redirect\n//     window.location.replace('/login');\n//   };\n\n//   const menuItems = [\n//     { text: 'Home', path: '/' },\n//     { text: 'Event', path: '/event' },\n//     { text: 'Task Tracker', path: '/tasktracker' },\n//     { text: 'Attendees', path: '/attendees' },\n//   ];\n\n//   return (\n//     <div className=\"sidebar-container\">\n//       <div className={`sidebar ${isOpen ? 'open' : ''}`}>\n//         <button className=\"toggle-button\" onClick={toggleSidebar}>\n//           ☰\n//         </button>\n//         <ul className={`menu ${isOpen ? '' : 'hidden'}`}>\n//           {menuItems.map((item) => (\n//             <li key={item.text} className=\"menu-item\">\n//               <Link to={item.path}>{item.text}</Link>\n//             </li>\n//           ))}\n//           <li className=\"menu-item\">\n//             <button \n//               onClick={handleLogout}\n//               className=\"logout-button\"\n//             >\n//               Logout\n//             </button>\n//           </li>\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Sidebar;\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/sidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    // Get user data from localStorage\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    if (userData && userData.username) {\n      setUsername(userData.username);\n    }\n  }, []);\n  const toggleSidebar = () => {\n    setIsOpen(prev => !prev);\n  };\n  const handleLogout = () => {\n    localStorage.clear();\n    window.location.replace('/login');\n  };\n  const menuItems = [{\n    text: 'Home',\n    path: '/'\n  }, {\n    text: 'Event',\n    path: '/event'\n  }, {\n    text: 'Task Tracker',\n    path: '/tasktracker'\n  }, {\n    text: 'Attendees',\n    path: '/attendees'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-button\",\n        onClick: toggleSidebar,\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `menu ${isOpen ? '' : 'hidden'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-name\",\n            children: [\"Welcome, \", username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [menuItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"menu-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: item.path,\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, item.text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"menu-item\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleLogout,\n              className: \"logout-button\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"NJdjvLhdZ61BPjS2f/h0+4UgjUA=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Sidebar","_s","isOpen","setIsOpen","username","setUsername","userData","JSON","parse","localStorage","getItem","toggleSidebar","prev","handleLogout","clear","window","location","replace","menuItems","text","path","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","map","item","to","_c","$RefreshReg$"],"sources":["/Users/charanpr/Downloads/EventManagementDashboard-main/frontend/src/Pages/Sidebar.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom'; // Removed useNavigate as it is unused\n// import '../styles/sidebar.css';\n\n// const Sidebar = () => {\n//   const [isOpen, setIsOpen] = useState(false);\n\n//   const toggleSidebar = () => {\n//     setIsOpen((prev) => !prev);\n//   };\n\n//   const handleLogout = () => {\n//     // Clear all auth-related data\n//     localStorage.clear(); // This will remove both token and user\n    \n//     // Force a page reload and redirect\n//     window.location.replace('/login');\n//   };\n\n//   const menuItems = [\n//     { text: 'Home', path: '/' },\n//     { text: 'Event', path: '/event' },\n//     { text: 'Task Tracker', path: '/tasktracker' },\n//     { text: 'Attendees', path: '/attendees' },\n//   ];\n\n//   return (\n//     <div className=\"sidebar-container\">\n//       <div className={`sidebar ${isOpen ? 'open' : ''}`}>\n//         <button className=\"toggle-button\" onClick={toggleSidebar}>\n//           ☰\n//         </button>\n//         <ul className={`menu ${isOpen ? '' : 'hidden'}`}>\n//           {menuItems.map((item) => (\n//             <li key={item.text} className=\"menu-item\">\n//               <Link to={item.path}>{item.text}</Link>\n//             </li>\n//           ))}\n//           <li className=\"menu-item\">\n//             <button \n//               onClick={handleLogout}\n//               className=\"logout-button\"\n//             >\n//               Logout\n//             </button>\n//           </li>\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Sidebar;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/sidebar.css';\n\nconst Sidebar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    // Get user data from localStorage\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    if (userData && userData.username) {\n      setUsername(userData.username);\n    }\n  }, []);\n\n  const toggleSidebar = () => {\n    setIsOpen((prev) => !prev);\n  };\n\n  const handleLogout = () => {\n    localStorage.clear();\n    window.location.replace('/login');\n  };\n\n  const menuItems = [\n    { text: 'Home', path: '/' },\n    { text: 'Event', path: '/event' },\n    { text: 'Task Tracker', path: '/tasktracker' },\n    { text: 'Attendees', path: '/attendees' },\n  ];\n\n  return (\n    <div className=\"sidebar-container\">\n      <div className={`sidebar ${isOpen ? 'open' : ''}`}>\n        <button className=\"toggle-button\" onClick={toggleSidebar}>\n          ☰\n        </button>\n        <div className={`menu ${isOpen ? '' : 'hidden'}`}>\n          {/* User Profile Section */}\n          <div className=\"user-profile\">\n            <div className=\"user-avatar\">\n              {/* Display first letter of username as avatar */}\n              {username.charAt(0).toUpperCase()}\n            </div>\n            <div className=\"user-name\">\n              Welcome, {username}\n            </div>\n          </div>\n\n          {/* Menu Items */}\n          <ul>\n            {menuItems.map((item) => (\n              <li key={item.text} className=\"menu-item\">\n                <Link to={item.path}>{item.text}</Link>\n              </li>\n            ))}\n            <li className=\"menu-item\">\n              <button \n                onClick={handleLogout}\n                className=\"logout-button\"\n              >\n                Logout\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}