{"ast":null,"code":"var _jsxFileName = \"/Users/charanpr/Downloads/EventManagementDashboard-main/frontend/src/Pages/Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/sidebar.css';\n\n// In Pages/Sidebar.jsx\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleLogout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  window.location.href = '/auth';\n};\n\n// Add this to your sidebar links/buttons\n/*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleLogout,\n  children: \"Logout\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 1\n}, this);\nconst Sidebar = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleSidebar = () => {\n    setIsOpen(prev => !prev);\n  };\n  const menuItems = [{\n    text: 'Home',\n    path: '/'\n  }, {\n    text: 'Event',\n    path: '/event'\n  }, {\n    text: 'Task Tracker',\n    path: '/tasktracker'\n  }, {\n    text: 'Attendees',\n    path: '/attendees'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-button\",\n        onClick: toggleSidebar,\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: `menu ${isOpen ? '' : 'hidden'}`,\n        children: menuItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"menu-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: item.path,\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, item.text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","handleLogout","localStorage","removeItem","window","location","href","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","Sidebar","_s","isOpen","setIsOpen","toggleSidebar","prev","menuItems","text","path","className","map","item","to","_c","$RefreshReg$"],"sources":["/Users/charanpr/Downloads/EventManagementDashboard-main/frontend/src/Pages/Sidebar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/sidebar.css';\n\n// In Pages/Sidebar.jsx\nconst handleLogout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  window.location.href = '/auth';\n};\n\n// Add this to your sidebar links/buttons\n<button onClick={handleLogout}>Logout</button>\n\nconst Sidebar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleSidebar = () => {\n    setIsOpen((prev) => !prev);\n  };\n\n  const menuItems = [\n    { text: 'Home', path: '/' },\n    { text: 'Event', path: '/event' },\n    { text: 'Task Tracker', path: '/tasktracker' },\n    { text: 'Attendees', path: '/attendees' },\n  ];\n\n  return (\n    <div className=\"sidebar-container\">\n      <div className={`sidebar ${isOpen ? 'open' : ''}`}>\n        <button className=\"toggle-button\" onClick={toggleSidebar}>\n          â˜°\n        </button>\n        <ul className={`menu ${isOpen ? '' : 'hidden'}`}>\n          {menuItems.map((item) => (\n            <li key={item.text} className=\"menu-item\">\n              <Link to={item.path}>{item.text}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n     \n    </div>\n  );\n};\n\n\n\nexport default Sidebar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,uBAAuB;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAChCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;EAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;AAChC,CAAC;;AAED;AACA,aAAAN,OAAA;EAAQO,OAAO,EAAEN,YAAa;EAAAO,QAAA,EAAC;AAAM;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAQ,CAAC;AAE9C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMoB,aAAa,GAAGA,CAAA,KAAM;IAC1BD,SAAS,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMC,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAI,CAAC,EAC3B;IAAED,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAS,CAAC,EACjC;IAAED,IAAI,EAAE,cAAc;IAAEC,IAAI,EAAE;EAAe,CAAC,EAC9C;IAAED,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAa,CAAC,CAC1C;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,mBAAmB;IAAAd,QAAA,eAChCR,OAAA;MAAKsB,SAAS,EAAE,WAAWP,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;MAAAP,QAAA,gBAChDR,OAAA;QAAQsB,SAAS,EAAC,eAAe;QAACf,OAAO,EAAEU,aAAc;QAAAT,QAAA,EAAC;MAE1D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTZ,OAAA;QAAIsB,SAAS,EAAE,QAAQP,MAAM,GAAG,EAAE,GAAG,QAAQ,EAAG;QAAAP,QAAA,EAC7CW,SAAS,CAACI,GAAG,CAAEC,IAAI,iBAClBxB,OAAA;UAAoBsB,SAAS,EAAC,WAAW;UAAAd,QAAA,eACvCR,OAAA,CAACF,IAAI;YAAC2B,EAAE,EAAED,IAAI,CAACH,IAAK;YAAAb,QAAA,EAAEgB,IAAI,CAACJ;UAAI;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC,GADhCY,IAAI,CAACJ,IAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEd,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAACE,EAAA,CA/BID,OAAO;AAAAa,EAAA,GAAPb,OAAO;AAmCb,eAAeA,OAAO;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}