{"ast":null,"code":"import _objectSpread from\"/Users/charanpr/Downloads/EventManagementDashboard-main/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState}from'react';import axios from'axios';import'../styles/taskDashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function TaskTracker(){const[tasks,setTasks]=useState([]);const[taskForm,setTaskForm]=useState({name:'',deadline:'',status:false,event:''});const[editingTaskId,setEditingTaskId]=useState(null);// Fetch tasks from the backend\nconst fetchTasks=async()=>{try{const response=await axios.get('http://localhost:5000/api/getTasks');setTasks(response.data);}catch(error){console.error('Error fetching tasks:',error);}};const[events,setEvents]=useState([]);// Fetch events from the API when the component mounts\nuseEffect(()=>{const fetchEvents=async()=>{try{const response=await axios.get('http://localhost:5000/api/getEvents');setEvents(response.data);// Assume the API returns an array of events\n}catch(error){console.error('Error fetching events:',error);}};fetchEvents();},[]);// Add a new task\nconst addTask=async e=>{e.preventDefault();try{await axios.post('http://localhost:5000/api/postTask',taskForm);setTaskForm({name:'',deadline:'',status:false,eventName:''});fetchTasks();}catch(error){console.error('Error adding task:',error);}};// Update an existing task\nconst updateTask=async name=>{try{console.log(name);await axios.put(\"http://localhost:5000/api/changeTaskStatus\",{name:name});setEditingTaskId(null);fetchTasks();}catch(error){console.error('Error updating task:',error);}};// Delete a task\nconst deleteTask=async name=>{try{console.log(name);await axios.delete(\"http://localhost:5000/api/deleteTask\",{data:{name:name}});fetchTasks();}catch(error){console.error('Error deleting task:',error);}};// Handle form input change\nconst handleInputChange=e=>{const{name,value,type,checked}=e.target;console.log(name);setTaskForm(_objectSpread(_objectSpread({},taskForm),{},{[name]:type==='checkbox'?checked:value}));};// Load tasks on component mount\nuseEffect(()=>{fetchTasks();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Task Management Dashboard\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"task-form\",onSubmit:editingTaskId?updateTask:addTask,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",placeholder:\"Task Name\",value:taskForm.name,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"deadline\",value:taskForm.deadline,onChange:handleInputChange}),/*#__PURE__*/_jsxs(\"select\",{name:\"eventName\",value:taskForm.eventName,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Select an event\"}),events.map(event=>/*#__PURE__*/_jsx(\"option\",{value:event.name,children:event.name},event._id))]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Task\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"task-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Deadline\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Event\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:tasks.map(task=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:task.name}),/*#__PURE__*/_jsx(\"td\",{children:task.deadline?new Date(task.deadline).toLocaleDateString():'No deadline'}),/*#__PURE__*/_jsx(\"td\",{children:task.status?'Completed':'Pending'}),/*#__PURE__*/_jsx(\"td\",{children:task.event||'Unlinked'}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.preventDefault();updateTask(task.name);},children:\"Update Status\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteTask(task.name),children:\"Delete\"})]})]},task._id))})]})})]});}","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","TaskTracker","tasks","setTasks","taskForm","setTaskForm","name","deadline","status","event","editingTaskId","setEditingTaskId","fetchTasks","response","get","data","error","console","events","setEvents","fetchEvents","addTask","e","preventDefault","post","eventName","updateTask","log","put","deleteTask","delete","handleInputChange","value","type","checked","target","_objectSpread","className","children","onSubmit","placeholder","onChange","required","disabled","map","_id","task","Date","toLocaleDateString","onClick"],"sources":["/Users/charanpr/Downloads/EventManagementDashboard-main/frontend/src/Pages/TaskTracker.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../styles/taskDashboard.css';\n\nexport default function TaskTracker() {\n  const [tasks, setTasks] = useState([]);\n  const [taskForm, setTaskForm] = useState({ name: '', deadline: '', status: false, event: '' });\n  const [editingTaskId, setEditingTaskId] = useState(null);\n\n  // Fetch tasks from the backend\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/getTasks');\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  const [events, setEvents] = useState([]);\n\n  // Fetch events from the API when the component mounts\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/getEvents');\n        setEvents(response.data); // Assume the API returns an array of events\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    };\n\n    fetchEvents();\n  }, []);\n\n  // Add a new task\n  const addTask = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/api/postTask', taskForm);\n      setTaskForm({ name: '', deadline: '', status: false, eventName: '' });\n      fetchTasks();\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  // Update an existing task\n  const updateTask = async (name) => {\n    try {\n      \n      console.log(name);\n      await axios.put(`http://localhost:5000/api/changeTaskStatus`, {name:name});\n      setEditingTaskId(null);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  // Delete a task\n  const deleteTask = async (name) => {\n    try {\n      console.log(name);\n      await axios.delete(`http://localhost:5000/api/deleteTask`,{data:{name:name}});\n      fetchTasks();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  // Handle form input change\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    console.log(name);\n    setTaskForm({\n      ...taskForm,\n      [name]: type === 'checkbox' ? checked : value,\n    });\n  };\n\n  // Load tasks on component mount\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  return (\n    <div className=\"dashboard-container\">\n      <h1>Task Management Dashboard</h1>\n\n      <form className=\"task-form\" onSubmit={editingTaskId ? updateTask : addTask}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Task Name\"\n          value={taskForm.name}\n          onChange={handleInputChange}\n          required\n        />\n        <input\n          type=\"date\"\n          name=\"deadline\"\n          value={taskForm.deadline}\n          onChange={handleInputChange}\n        />\n        \n        <select\n              name=\"eventName\"\n              value={taskForm.eventName}\n              onChange={handleInputChange}\n            >\n              <option value=\"\" disabled>Select an event</option>\n              {events.map((event) => (\n                <option key={event._id} value={event.name}>\n                  {event.name}\n                </option>\n              ))}\n            </select>\n        <button type=\"submit\">Add Task</button>\n      </form>\n\n        <div className=\"task-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Deadline</th>\n                  <th>Status</th>\n                  <th>Event</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {tasks.map((task) => (\n                  <tr key={task._id}>\n                    <td>{task.name}</td>\n                    <td>{task.deadline ? new Date(task.deadline).toLocaleDateString() : 'No deadline'}</td>\n                    <td>{task.status ? 'Completed' : 'Pending'}</td>\n                    <td>{task.event || 'Unlinked'}</td>\n                    <td>\n                      <button \n                        onClick={(e) => { \n                          e.preventDefault(); \n                          updateTask(task.name);\n                        }}\n                      >\n                        Update Status\n                      </button>\n                      <button onClick={() => deleteTask(task.name)}>Delete</button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n      </div>\n\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}